<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="CD{r3f(Sb{xQn1iN]Ho:" x="0" y="0"><statement name="HANDLER"><block type="music_set_built_in_speaker_enable" id="%a-4la)uA1Mr^_JIwSSM"><value name="enabled"><shadow type="toggleOnOff" id=",M.Cugd0=IC~@-:-zhRl"><field name="on">true</field></shadow></value><next><block type="typescript_statement" id="M[`8},#3BZ*(zdXkdcNn" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace piano {" line1="" line2="  " line3="    let yahStrip: neopixel.Strip;" line4="    " line5="    " line6="    export enum enMusic {" line7="" line8="        dadadum = 0," line9="        entertainer," line10="        prelude," line11="        ode," line12="        nyan," line13="        ringtone," line14="        funk," line15="        blues," line16="        birthday," line17="        wedding," line18="        funeral," line19="        punchline," line20="        baddy," line21="        chase," line22="        ba_ding," line23="        wawawawaa," line24="        jump_up," line25="        jump_down," line26="        power_up," line27="        power_down" line28="    }" line29="" line30="    export enum touch {" line31="        //% blockId=&quot;None&quot; block=&quot;None&quot;" line32="        None = 0x0000," line33="        //% blockId=&quot;C&quot; block=&quot;C&quot;" line34="        C = 0x0004," line35="        //% blockId=&quot;CD&quot; block=&quot;CD&quot;" line36="        CD = 0x0008," line37="        //% blockId=&quot;D&quot; block=&quot;D&quot;" line38="        D = 0x0010," line39="        //% blockId=&quot;DE&quot; block=&quot;DE&quot;" line40="        DE = 0x0020," line41="        //% blockId=&quot;E&quot; block=&quot;E&quot;" line42="        E = 0x0040," line43="        //% blockId=&quot;F&quot; block=&quot;F&quot;" line44="        F = 0x0080," line45="        //% blockId=&quot;FG&quot; block=&quot;FG&quot;" line46="        FG = 0x0100," line47="        //% blockId=&quot;G&quot; block=&quot;G&quot;" line48="        G = 0x0200," line49="        //% blockId=&quot;GA&quot; block=&quot;GA&quot;" line50="        GA = 0x0400," line51="        //% blockId=&quot;A&quot; block=&quot;A&quot;" line52="        A = 0x0800," line53="        //% blockId=&quot;AB&quot; block=&quot;AB&quot;" line54="        AB = 0x1000," line55="        //% blockId=&quot;B&quot; block=&quot;B&quot;" line56="        B = 0x2000, " line57="        //% blockId=&quot;L&quot; block=&quot;L&quot;" line58="        L = 0x0002," line59="        //% blockId=&quot;M&quot; block=&quot;M&quot;" line60="        M = 0x0001," line61="        //% blockId=&quot;H&quot; block=&quot;H&quot;" line62="        H = 0x4000," line63="       " line64="    }" line65="    " line66="    export enum enColor {" line67="        //% blockId=&quot;OFF&quot; block=&quot;OFF&quot;" line68="        OFF = 0," line69="        //% blockId=&quot;RED&quot; block=&quot;RED&quot;" line70="        RED," line71="        //% blockId=&quot;GREEN&quot; block=&quot;GREEN&quot;" line72="        GREEN," line73="        //% blockId=&quot;BLUE&quot; block=&quot;BLUE&quot;" line74="        BLUE," line75="        //% blockId=&quot;WHITE&quot; block=&quot;WHITE&quot;" line76="        WHITE," line77="        //% blockId=&quot;CYAN&quot; block=&quot;CYAN&quot;" line78="        CYAN," line79="        //% blockId=&quot;PINKISH&quot; block=&quot;PINKISH&quot;" line80="        PINKISH," line81="        //% blockId=&quot;YELLOW&quot; block=&quot;YELLOW&quot;" line82="        YELLOW" line83="    }" line84="    " line85="" line86="    function i2cwrite(addr: number, reg: number, value: number) { " line87="        let buf = pins.createBuffer(2); " line88="        buf[0] = reg; " line89="        buf[1] = value; " line90="        pins.i2cWriteBuffer(addr, buf); " line91="    }  " line92="         " line93="        " line94="   " line95="    /**" line96="     * *****************************************************************" line97="     * @param index" line98="     */" line99="    " line100="    //% blockId=piano_RGB_Program block=&quot;RGB_Program&quot;" line101="    //% weight=99" line102="    //% blockGap=10" line103="    //% name.fieldEditor=&quot;gridpicker&quot; name.fieldOptions.columns=4" line104="    export function RGB_Program(): neopixel.Strip {" line105="         " line106="        if (!yahStrip) {" line107="            yahStrip = neopixel.create(DigitalPin.P1, 3, NeoPixelMode.RGB);" line108="        }" line109="        return yahStrip;  " line110="    }  " line111="       " line112="    //% blockId=piano_RGB_Program_Close block=&quot;RGB_Program_Close&quot;" line113="    //% weight=98" line114="    //% blockGap=10" line115="    //% name.fieldEditor=&quot;gridpicker&quot; name.fieldOptions.columns=12" line116="    export function RGB_Program_Close(): void {" line117="        pins.digitalWritePin(DigitalPin.P1, 0);" line118="        piano.RGB_Program().clear();" line119="        piano.RGB_Program().show();" line120="    }" line121="    " line122="    //% blockId=piano_Music_Handle block=&quot;Music_Handle|%index&quot;" line123="    //% weight=98" line124="    //% blockGap=10" line125="    //% name.fieldEditor=&quot;gridpicker&quot; name.fieldOptions.columns=4" line126="    export function Music_Handle(index: enMusic): void {" line127="        switch (index) {" line128="            case enMusic.dadadum: music.beginMelody(music.builtInMelody(Melodies.Dadadadum), MelodyOptions.Once); break;" line129="            case enMusic.birthday: music.beginMelody(music.builtInMelody(Melodies.Birthday), MelodyOptions.Once); break;" line130="            case enMusic.entertainer: music.beginMelody(music.builtInMelody(Melodies.Entertainer), MelodyOptions.Once); break;" line131="            case enMusic.prelude: music.beginMelody(music.builtInMelody(Melodies.Prelude), MelodyOptions.Once); break;" line132="            case enMusic.ode: music.beginMelody(music.builtInMelody(Melodies.Ode), MelodyOptions.Once); break;" line133="            case enMusic.nyan: music.beginMelody(music.builtInMelody(Melodies.Nyan), MelodyOptions.Once); break;" line134="            case enMusic.ringtone: music.beginMelody(music.builtInMelody(Melodies.Ringtone), MelodyOptions.Once); break;" line135="            case enMusic.funk: music.beginMelody(music.builtInMelody(Melodies.Funk), MelodyOptions.Once); break;" line136="            case enMusic.blues: music.beginMelody(music.builtInMelody(Melodies.Blues), MelodyOptions.Once); break;" line137="            case enMusic.wedding: music.beginMelody(music.builtInMelody(Melodies.Wedding), MelodyOptions.Once); break;" line138="            case enMusic.funeral: music.beginMelody(music.builtInMelody(Melodies.Funeral), MelodyOptions.Once); break;" line139="            case enMusic.punchline: music.beginMelody(music.builtInMelody(Melodies.Punchline), MelodyOptions.Once); break;" line140="            case enMusic.baddy: music.beginMelody(music.builtInMelody(Melodies.Baddy), MelodyOptions.Once); break;" line141="            case enMusic.chase: music.beginMelody(music.builtInMelody(Melodies.Chase), MelodyOptions.Once); break;" line142="            case enMusic.ba_ding: music.beginMelody(music.builtInMelody(Melodies.BaDing), MelodyOptions.Once); break;" line143="            case enMusic.wawawawaa: music.beginMelody(music.builtInMelody(Melodies.Wawawawaa), MelodyOptions.Once); break;" line144="            case enMusic.jump_up: music.beginMelody(music.builtInMelody(Melodies.JumpUp), MelodyOptions.Once); break;" line145="            case enMusic.jump_down: music.beginMelody(music.builtInMelody(Melodies.JumpDown), MelodyOptions.Once); break;" line146="            case enMusic.power_up: music.beginMelody(music.builtInMelody(Melodies.PowerUp), MelodyOptions.Once); break;" line147="            case enMusic.power_down: music.beginMelody(music.builtInMelody(Melodies.PowerDown), MelodyOptions.Once); break;" line148="        }      " line149="    }" line150="    " line151="    //% blockId=piano_Touch block=&quot;Music Touch return&quot;" line152="    //% weight=97" line153="    //% blockGap=10" line154="    //% name.fieldEditor=&quot;gridpicker&quot; name.fieldOptions.columns=6" line155="    export function Touch(): number {" line156="        let a = 0;" line157="        let b = 0;" line158="        let c = 0;" line159="        pins.i2cWriteNumber(0x50,8,NumberFormat.UInt8BE,false);" line160="        a = pins.i2cReadNumber(0x50, NumberFormat.UInt8BE, false);" line161="        b = pins.i2cReadNumber(0x50, NumberFormat.UInt8BE, false);" line162="        c = (b&lt;&lt;8)|a;" line163="        return c;" line164="    }" line165="    " line166="    //% blockId=piano_TouchButton block=&quot;Music Button|%value&quot;" line167="    //% weight=96" line168="    //% blockGap=10" line169="    //% name.fieldEditor=&quot;gridpicker&quot; name.fieldOptions.columns=6" line170="    export function TouchButton(value: touch): number {" line171="       " line172="        let d = value;" line173="        return d;" line174="    }" line175="" line176="    //% blockId=piano_PlayPiano block=&quot;Play Piano|tone %value&quot;" line177="    //% weight=95" line178="    //% blockGap=10" line179="    //% name.fieldEditor=&quot;gridpicker&quot; name.fieldOptions.columns=6" line180="    export function PlayPiano(value: number): void {" line181="        let e = 0;" line182="        let f = 0;" line183="        let g = 0;" line184="        let temp = 0;" line185="        pins.i2cWriteNumber(0x50, 8, NumberFormat.UInt8BE,false);" line186="        e = pins.i2cReadNumber(0x50, NumberFormat.UInt8BE, false);" line187="        f = pins.i2cReadNumber(0x50, NumberFormat.UInt8BE, false);" line188="        g = (f &lt;&lt; 8) | e;" line189="        " line190="        " line191="        if (value == 1) { " line192="            if ((g &amp; temp) != 0) {" line193="                g = g &amp; temp;" line194="            } else if (g &amp; touch.C) {" line195="                music.ringTone(131);" line196="            } else if (g &amp; touch.CD) {" line197="                music.ringTone(139);" line198="            } else if (g &amp; touch.D) {" line199="                music.ringTone(147);" line200="            } else if (g &amp; touch.DE) {" line201="                music.ringTone(156);" line202="            } else if (g &amp; touch.E) {" line203="                music.ringTone(165);" line204="            } else if (g &amp; touch.F) {" line205="                music.ringTone(175);" line206="            } else if (g &amp; touch.FG) {" line207="                music.ringTone(185);" line208="            } else if (g &amp; touch.G) {" line209="                music.ringTone(196);" line210="            } else if (g &amp; touch.GA) {" line211="                music.ringTone(208);" line212="            } else if (g &amp; touch.A) {" line213="                music.ringTone(220);" line214="            } else if (g &amp; touch.AB) {" line215="                music.ringTone(233);" line216="            } else if (g &amp; touch.B) {" line217="                music.ringTone(247);" line218="            } else if (g == touch.None) {" line219="                music.ringTone(0);" line220="                //pins.digitalWritePin(DigitalPin.P0, 0);" line221="            }" line222="        }" line223="        else  if (value == 2) { " line224="            if ((g &amp; temp) != 0) {" line225="                g = g &amp; temp;" line226="            } else if (g &amp; touch.C) {" line227="                music.ringTone(262);" line228="            } else if (g &amp; touch.CD) {" line229="                music.ringTone(277);" line230="            } else if (g &amp; touch.D) {" line231="                music.ringTone(294);" line232="            } else if (g &amp; touch.DE) {" line233="                music.ringTone(311);" line234="            } else if (g &amp; touch.E) {" line235="                music.ringTone(330);" line236="            } else if (g &amp; touch.F) {" line237="                music.ringTone(349);" line238="            } else if (g &amp; touch.FG) {" line239="                music.ringTone(370);" line240="            } else if (g &amp; touch.G) {" line241="                music.ringTone(392);" line242="            } else if (g &amp; touch.GA) {" line243="                music.ringTone(415);" line244="            } else if (g &amp; touch.A) {" line245="                music.ringTone(440);" line246="            } else if (g &amp; touch.AB) {" line247="                music.ringTone(466);" line248="            } else if (g &amp; touch.B) {" line249="                music.ringTone(494);" line250="            } else if (g == touch.None) {" line251="                music.ringTone(0);" line252="                //pins.digitalWritePin(DigitalPin.P0, 0);" line253="            }" line254="        }" line255="        else  if (value == 3) { " line256="            if ((g &amp; temp) != 0) {" line257="                g = g &amp; temp;" line258="            } else if (g &amp; touch.C) {" line259="                music.ringTone(523);" line260="            } else if (g &amp; touch.CD) {" line261="                music.ringTone(554);" line262="            } else if (g &amp; touch.D) {" line263="                music.ringTone(587);" line264="            } else if (g &amp; touch.DE) {" line265="                music.ringTone(622);" line266="            } else if (g &amp; touch.E) {" line267="                music.ringTone(659);" line268="            } else if (g &amp; touch.F) {" line269="                music.ringTone(698);" line270="            } else if (g &amp; touch.FG) {" line271="                music.ringTone(740);" line272="            } else if (g &amp; touch.G) {" line273="                music.ringTone(784);" line274="            } else if (g &amp; touch.GA) {" line275="                music.ringTone(831);" line276="            } else if (g &amp; touch.A) {" line277="                music.ringTone(880);" line278="            } else if (g &amp; touch.AB) {" line279="                music.ringTone(932);" line280="            } else if (g &amp; touch.B) {" line281="                music.ringTone(988);" line282="            } else if (g == touch.None) {" line283="                music.ringTone(0);" line284="                //pins.digitalWritePin(DigitalPin.P0, 0);" line285="            }" line286="        }" line287="        " line288="        " line289="" line290="        " line291="    }" line292="    " line293="    " line294="}" numlines="295"></mutation></block></next></block></statement></block></xml>